int Solution::maxSpecialProduct(vector<int> &A) {
    int n = A.size(), mod = 1e9 + 7;
    vector<int> right(n,n), left(n, -1);
    
    stack<int> st;
    for(int i = 0;i < n; i++){
        while(!st.empty() && A[i] > A[st.top()]){
            right[st.top()] = i;
            st.pop();
        }
        st.push(i);
    }
    while(!st.empty()){
        st.pop();
    }
    for(int i = n-1;i >= 0; i--){
        while(!st.empty() && A[i] > A[st.top()]){
            left[st.top()] = i;
            st.pop();
        }
        st.push(i);
    }
    long long ans = 0;
    for(int i = 1; i < n-1; i++){
        if(left[i] != -1 && right[i] != n){
            ans = max(ans, (left[i]*1LL*right[i]));
        }
    }
    return ans%mod;
}
